<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:GenFx.UI.Controls"
    xmlns:converters="clr-namespace:GenFx.UI.Converters"
    xmlns:viewModels="clr-namespace:GenFx.UI.ViewModels"
    xmlns:xamltoolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:oxy="http://oxyplot.org/wpf">
    
    <converters:BooleanToDoubleConverter x:Key="buttonTextOpacityConverter" ValueForFalse="0.5" ValueForTrue="1" />
    <converters:AdditionConverter x:Key="minus1Converter" Value="-1" />
    <converters:NullToBooleanConverter x:Key="nullToBooleanConverter" ValueForNull="False" />
    <converters:RequireNonNegativeIntegerConverter x:Key="requireNonNegativeIntegerConverter" />
    <converters:NullToVisibilityConverter x:Key="nullToVisibilityConverter" ValueForNull="Collapsed" ValueForNonNull="Visible" />
    <converters:ExecutionStateToStringConverter x:Key="executionStateToStringConverter" />
    <converters:EnumViewModelConverter x:Key="enumViewModelConverter" />

    <Style TargetType="Button" x:Key="ExecutionButton">
        <Setter Property="Margin" Value="5,5,0,5" />
    </Style>
    <Style TargetType="TextBlock" x:Key="ExecutionButtonText">
        <Setter Property="FontFamily" Value="Segoe UI Symbol" />
    </Style>
    <Style TargetType="Separator" x:Key="separatorStyle"
           BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
        <Setter Property="Margin" Value="2,0" />
    </Style>
    <Style TargetType="{x:Type local:ExecutionPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ExecutionPanel}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{StaticResource ExecutionButton}"
                                    ToolTip="Run"
                                    Command="{x:Static local:ExecutionPanel.StartExecutionCommand}">
                                <TextBlock Style="{StaticResource ExecutionButtonText}"
                                           Opacity="{Binding CanStart,
                                           Converter={StaticResource buttonTextOpacityConverter},
                                           RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ExecutionPanel}}}"
                                           Text="&#xE102;" />
                            </Button>
                            <Button Style="{StaticResource ExecutionButton}"
                                    ToolTip="Step"
                                    Command="{x:Static local:ExecutionPanel.StepExecutionCommand}">
                                <TextBlock Style="{StaticResource ExecutionButtonText}"
                                           Opacity="{Binding CanStart,
                                           Converter={StaticResource buttonTextOpacityConverter},
                                           RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ExecutionPanel}}}"
                                           Text="&#xe23a;" />
                            </Button>
                            <Button Style="{StaticResource ExecutionButton}"
                                    ToolTip="Pause"
                                    Command="{x:Static local:ExecutionPanel.PauseExecutionCommand}">
                                <TextBlock Style="{StaticResource ExecutionButtonText}"
                                           Opacity="{Binding CanPause,
                                           Converter={StaticResource buttonTextOpacityConverter},
                                           RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ExecutionPanel}}}"
                                           Text="&#xE103;" />
                            </Button>
                            <Button Style="{StaticResource ExecutionButton}"
                                    ToolTip="Stop"
                                    Command="{x:Static local:ExecutionPanel.StopExecutionCommand}">
                                <TextBlock Style="{StaticResource ExecutionButtonText}"
                                           Opacity="{Binding CanStop,
                                           Converter={StaticResource buttonTextOpacityConverter},
                                           RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ExecutionPanel}}}"
                                           Text="&#xE15B;" />
                            </Button>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:EnvironmentViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EnvironmentViewer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:EnvironmentViewer}}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <local:PopulationSelector Grid.Row="0"
                                                      x:Name="populationSelector"
                                                      Environment="{Binding Environment}" />
                            <local:PopulationViewer Grid.Row="1"
                                                    Population="{Binding SelectedPopulation, ElementName=populationSelector}"
                                                    ExecutionState="{Binding ExecutionState}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PopulationSelector}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PopulationSelector}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PopulationSelector}}}">
                        <StackPanel Orientation="Horizontal"
                                    IsEnabled="{Binding Environment, Converter={StaticResource nullToBooleanConverter}}">
                            <Label Content="Population Index:"
                                   VerticalAlignment="Bottom"
                                   Padding="0,0,0,3"
                                   Margin="0,0,5,0"/>
                            <xamltoolkit:IntegerUpDown Value="{Binding SelectedPopulationIndex, Mode=TwoWay, Converter={StaticResource requireNonNegativeIntegerConverter}}"
                                                       Minimum="0"
                                                       Maximum="{Binding Environment.Populations.Count, Converter={StaticResource minus1Converter}}" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PopulationViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PopulationViewer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PopulationViewer}}}">
                        <ListView ItemsSource="{Binding SelectedPopulationEntities}"
                                  VirtualizingStackPanel.VirtualizationMode="Recycling">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn DisplayMemberBinding="{Binding Path=Representation}" Header="Entity" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Path=Age}" Header="Age" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Path=RawFitnessValue}" Header="Raw Fitness" Width="100"/>
                                    <GridViewColumn DisplayMemberBinding="{Binding Path=ScaledFitnessValue}" Header="Scaled Fitness" Width="100"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:AlgorithmStatusBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AlgorithmStatusBar}">
                    <StatusBar DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AlgorithmStatusBar}}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                       Text="{Binding ExecutionContext.ExecutionState, Converter={StaticResource executionStateToStringConverter}}" />
                            
                            <StackPanel Grid.Column="1"
                                        Orientation="Horizontal">
                                <Separator Style="{StaticResource separatorStyle}"/>
                                <TextBlock Text="Generation:"
                                           Margin="5,0" />
                                <TextBlock Text="{Binding ExecutionContext.GeneticAlgorithm.CurrentGeneration}"
                                           Margin="0,0,5,0"/>
                            </StackPanel>

                            <DockPanel LastChildFill="True" Grid.Column="2"
                                       Visibility="{Binding ExecutionContext.AlgorithmException, Converter={StaticResource nullToVisibilityConverter}}">
                                <Separator DockPanel.Dock="Left"
                                           Style="{StaticResource separatorStyle}" />
                                <TextBlock Text="&#xE171;"
                                           FontFamily="Segoe UI Symbol"
                                           Foreground="Red" />
                                <TextBlock TextTrimming="CharacterEllipsis"
                                           Foreground="Red" 
                                           ToolTip="{Binding ExecutionContext.AlgorithmException.Message}"
                                           Text="{Binding ExecutionContext.AlgorithmException.Message}" />
                            </DockPanel>
                        </Grid>
                    </StatusBar>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:FitnessChart}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FitnessChart}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:FitnessChart}}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0"
                                        Orientation="Horizontal">
                                <Label Content="Fitness type:"
                                       VerticalAlignment="Bottom"
                                       Padding="0,0,0,3"
                                       Margin="0,0,5,0"/>
                                <ComboBox ItemsSource="{Binding Source={x:Static viewModels:EnumsViewModel.FitnessTypes}}"
                                      DisplayMemberPath="DisplayName"
                                      SelectedItem="{Binding FitnessType, Converter={StaticResource enumViewModelConverter}}" />
                                <Label Content="Sort by:"
                                       VerticalAlignment="Bottom"
                                       Padding="0,0,0,3"
                                       Margin="10,0,5,0"/>
                                <ComboBox ItemsSource="{Binding Source={x:Static viewModels:EnumsViewModel.FitnessSortOptions}}"
                                      DisplayMemberPath="DisplayName"
                                      SelectedItem="{Binding FitnessSortOption, Converter={StaticResource enumViewModelConverter}}" />
                            </StackPanel>
                            <oxy:PlotView Grid.Row="1" Model="{Binding PlotModel}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
